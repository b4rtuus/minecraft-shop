generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums

enum PaymentProvider {
  STRIPE
  PRZELEWY24
  PAYPAL
  BLIK
  HOTPAY_TRANFER
  HOTPAY_PAYSAFECARD
  HOTPAY_SMS
  PAYBYLINK_TRANFER
  PAYBYLINK_PAYSAFECARD
  PAYBYLINK_SMS
}

enum TransactionStatus {
  PENDING
  SUCCESS
  CANCELED
  VOUCHER
}

// Models

model PaymentMethod {
  provider PaymentProvider @id
  fee      Float           @default(0)
  secret   String
}

model Product {
  id            String    @id @default(uuid())
  price         Float     @default(1)
  name          String
  description   String?
  imageUri      String?
  requireOnline Boolean   @default(false)
  minimumBuy    Int?
  maximumBuy    Int?
  server        Server    @relation(fields: [serverId], references: [id])
  serverId      String
  vouchers      Voucher[]
  transactions  Transaction[]
}

model Server {
  id       String    @id @default(uuid())
  name     String
  ip       String    @unique
  imageUri String?
  products Product[]
}

model Voucher {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model CustomPage {
  id          String @id @default(uuid())
  title       String
  description String?
  content     String?
}

model Transaction {
  id          String            @id @default(uuid())
  product     Product           @relation(fields: [ productId ], references: [id], onDelete: Cascade)
  productId   String
  status      TransactionStatus @default(PENDING)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}